# def vision_recognized_marker_letter_F(msg):
#    vision_ctrl.disable_detection(rm_define.vision_detection_marker)
#    vision_ctrl.detect_marker_and_aim(rm_define.marker_letter_F)
#    gun_ctrl.fire_once()
# def scan_for_marker():
#    vision_ctrl.enable_detection(rm_define.vision_detection_marker)
#    gimbal_ctrl.yaw_ctrl(-100)
#    gimbal_ctrl.yaw_ctrl(90)

# def start():
#    robot_ctrl.set_mode(rm_define.robot_mode_free)
# #     #A to B
# #     chassis_ctrl.move_with_distance(0,5)
# #     chassis_ctrl.move_with_distance(0,0.47)
# #     time.sleep(5)
# #     #B Obstacle course
# #     chassis_ctrl.move_with_distance(0,0.36)
# #     chassis_ctrl.rotate_with_degree(rm_define.anticlockwise,90)
# #     chassis_ctrl.move_with_distance(0,0.8)
# #     chassis_ctrl.rotate_with_degree(rm_define.clockwise,90)
# #     chassis_ctrl.move_with_distance(0,0.45)
# #     chassis_ctrl.rotate_with_degree(rm_define.clockwise,90)
# #     chassis_ctrl.move_with_distance(0,1.6)
# #     chassis_ctrl.rotate_with_degree(rm_define.anticlockwise,90)
# #     chassis_ctrl.move_with_distance(0,0.43)
# #     chassis_ctrl.rotate_with_degree(rm_define.anticlockwise,90)
# #     chassis_ctrl.move_with_distance(0,0.53)
# #     chassis_ctrl.rotate_with_degree(rm_define.clockwise,43)
# #     chassis_ctrl.move_with_distance(0,1.5)
# #     chassis_ctrl.rotate_with_degree(rm_define.clockwise,47)
# #     chassis_ctrl.move_with_distance(0,0.56)
# #     chassis_ctrl.rotate_with_degree(rm_define.clockwise,95)
# #     chassis_ctrl.move_with_distance(0,0.86)
# #     chassis_ctrl.rotate_with_degree(rm_define.anticlockwise,90)
# #     chassis_ctrl.move_with_distance(0,0.41)
# #     time.sleep(5)
# #     #B to C
# #     chassis_ctrl.move_with_distance(0,5)
# #     chassis_ctrl.move_with_distance(0,1.5)
#    #Room C
#    chassis_ctrl.rotate_with_degree(rm_define.clockwise,90)
#    chassis_ctrl.move_with_distance(0,2.13)
#    chassis_ctrl.rotate_with_degree(rm_define.clockwise,90)
#    chassis_ctrl.move_with_distance(0,2.13)
#    chassis_ctrl.rotate_with_degree(rm_define.clockwise,90)
#    scan_for_marker()
#    chassis_ctrl.rotate_with_degree(rm_define.clockwise,90)
#    chassis_ctrl.move_with_distance(0,2.13)
#    chassis_ctrl.rotate_with_degree(rm_define.anticlockwise,90)
#    chassis_ctrl.move_with_distance(0,2.13)
#    chassis_ctrl.rotate_with_degree(rm_define.clockwise,90)
#    time.sleep(5)
#    #C To D

#    # chassis_ctrl.move_with_distance(0,5)
#    # chassis_ctrl.move_with_distance(0,5)
#    # chassis_ctrl.move_with_distance(0,0.35)
#    # chassis_ctrl.rotate_with_degree(rm_define.clockwise,90)
#    # chassis_ctrl.move_with_distance(0,2.5)
#    # chassis_ctrl.rotate_with_degree(rm_define.clockwise,90)
#    # chassis_ctrl.move_with_distance(0,1.8)
#    # chassis_ctrl.rotate_with_degree(rm_define.anticlockwise,90)
#    # chassis_ctrl.move_with_distance(0,4.4)
#    # chassis_ctrl.rotate_with_degree(rm_define.clockwise,90)
#    # chassis_ctrl.move_with_distance(0,1.37)
#    # #SCAN HERE
#    # chassis_ctrl.rotate_with_degree(rm_define.clockwise,180)
#    # chassis_ctrl.move_with_distance(0,1.37)
#    # chassis_ctrl.rotate_with_degree(rm_define.anticlockwise,90)
#    # chassis_ctrl.move_with_distance(0,4.5)
#    # chassis_ctrl.rotate_with_degree(rm_define.clockwise,90)
#    # chassis_ctrl.move_with_distance(0,1.8)
#    # chassis_ctrl.rotate_with_degree(rm_define.anticlockwise,90)
#    # chassis_ctrl.move_with_distance(0,2.5)
#    # chassis_ctrl.rotate_with_degree(rm_define.clockwise,90)